package telegram

import (
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"log"
	"strconv"
)

const (
	commandStart = "start"
	commandHelp  = "help"
	commandTrack = "track"
	commandStop  = "stop"
)

const (
	startResponse = `
–ü—Ä–∏–≤–µ—Ç! üëã –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤.
–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –ª—É—á—à–∏–µ —Ü–µ–Ω—ã –Ω–∞ —Ä–µ–π—Å—ã –∏ —É–≤–µ–¥–æ–º–ª—é, –∫–æ–≥–¥–∞ –æ–Ω–∏ —Å–Ω–∏–∑—è—Ç—Å—è.

–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É:
- ‚úàÔ∏è –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ü–µ–Ω—ã –Ω–∞ –±–∏–ª–µ—Ç—ã.
- üîî –£–≤–µ–¥–æ–º–ª—è—Ç—å –æ —Å–Ω–∏–∂–µ–Ω–∏–∏ —Ü–µ–Ω.
- üïí –ü—Ä–∏—Å—ã–ª–∞—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ—Ç—á—ë—Ç—ã.

–ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–æ–º–∞–Ω–¥–∞—Ö
`

	helpResponse = `
–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:  

- /track <–≥–æ—Ä–æ–¥ –≤—ã–ª–µ—Ç–∞> <–≥–æ—Ä–æ–¥ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è>  
  ‚û°Ô∏è –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–π—Å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.  

- /list  
  üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ä–µ–π—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—à—å.  

- /remove <–Ω–æ–º–µ—Ä —Ä–µ–π—Å–∞>  
  üóë –£–¥–∞–ª–∏—Ç—å —Ä–µ–π—Å –∏–∑ —Å–ø–∏—Å–∫–∞.  

- /notifications <on|off>  
  üîî –í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.  

- /settings  
  ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.  

–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –Ω–∞–ø–∏—à–∏ –Ω–∞–º!
`
)

func (b *Bot) handleCommand(message *tgbotapi.Message) error {
	switch message.Command() {
	case commandStart:
		return b.handleStartCommand(message)
	case commandHelp:
		return b.handleHelpCommand(message)
	default:
		return nil
	}
}

func (b *Bot) handleStartCommand(message *tgbotapi.Message) error {
	err := b.trackingService.AddUser(message.Chat.UserName, message.Chat.ID)
	if err != nil {
		return err
	}

	msg := tgbotapi.NewMessage(message.Chat.ID, startResponse)
	_, err = b.tgBotApi.Send(msg)
	if err != nil {
		return err
	}

	return nil
}

func (b *Bot) handleHelpCommand(message *tgbotapi.Message) error {
	msg := tgbotapi.NewMessage(message.Chat.ID, helpResponse)
	_, err := b.tgBotApi.Send(msg)
	if err != nil {
		return err
	}

	return nil
}

//func (b *Bot) handleStopCommand(message *tgbotapi.Message) error {
//	msg
//}

func (b *Bot) handleMessage(message *tgbotapi.Message) error {
	log.Println(strconv.Itoa(int(message.Chat.ID)) + ":" + message.Text)
	return nil
}
